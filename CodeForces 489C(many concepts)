Problem Link: https://codeforces.com/contest/490/problem/C

Helpful Links:
https://www.geeksforgeeks.org/modular-exponentiation-power-in-modular-arithmetic/
https://www.geeksforgeeks.org/program-quotient-remainder-big-number/



// 
// ▓▓▓▓▓▓▓▓████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████▓▓▓▓▓▓▓▓▓▓▓▓██████
// ▓▓▓▓██████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░▓▓░░▒▒▒▒░░▒▒▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓██████████████▓▓▓▓▓▓▓▓████
// ██████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░▓▓░░░░▒▒░░▒▒▓▓▒▒▒▒▓▓▓▓▒▒▒▒▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▓▓▓▓▓▓██▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓██▓▓██▓▓▓▓██▓▓████████████▓▓▓▓▓▓██
// ██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░▒▒░░░░▒▒░░▒▒▒▒▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▓▓▒▒▓▓▓▓▒▒▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓████▓▓▓▓▓▓████████████▓▓██
// ██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓████▓▓████▓▓▓▓▓▓▓▓▓▓██████████▓▓
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▒▒▒▒▒▒▓▓▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████████▓▓▓▓▓▓▓▓▓▓▓▓██████████
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒░░▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▓▓▒▒▒▒▓▓▒▒▒▒▒▒▓▓▒▒▓▓▓▓▓▓▒▒▓▓▒▒▒▒██▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████▓▓██▓▓▓▓▓▓▓▓████████
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░▒▒▒▒▒▒▒▒▓▓▒▒▓▓▒▒▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▒▒▓▓▒▒▓▓▓▓▒▒▓▓▒▒▓▓██▓▓▓▓██▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████████████▓▓▓▓▓▓▓▓▓▓██████
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▒▒░░▒▒▓▓▒▒▒▒▓▓▓▓▒▒▓▓▒▒▒▒▒▒▓▓▒▒▒▒▒▒▓▓▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓████▓▓▓▓██████▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓▓▓██████▓▓████████▓▓▓▓▓▓▓▓▓▓▓▓████
// ▓▓▓▓▓▓▓▓▓▓▓▓██████████████████████▓▓██████████▓▓▓▓▓▓▓▓████████████▒▒▒▒▒▒▓▓▒▒▒▒▓▓▒▒▓▓▓▓▓▓▒▒▒▒▓▓▒▒▒▒▒▒▓▓▒▒▒▒▒▒▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓████▓▓████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓██
// ▓▓▓▓████████▓▓▓▓▓▓▓▓▓▓▓▓██████████████████████████████████████▓▓██▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▒▒▓▓▒▒▓▓▒▒▒▒▒▒▓▓▒▒▓▓▓▓▓▓▒▒▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓██████████████▓▓▓▓▓▓▓▓██▓▓▓▓██▓▓▓▓████▓▓████████████▓▓▓▓▓▓▓▓▓▓▓▓
// ██████▓▓▓▓▓▓▓▓▓▓██▓▓██▓▓████████████████████████████████████▓▓▓▓██▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▒▒▓▓▒▒▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▒▒██▓▓▓▓██▓▓████████████▓▓▓▓▓▓▓▓██████▓▓██▓▓██████████████████████▓▓▓▓▓▓▓▓
// ████▓▓▓▓▓▓▓▓▓▓▓▓██▓▓██████▓▓██████████████████████████████████████▒▒▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓██▓▓▓▓████████████████▓▓▓▓██▓▓████▓▓██▓▓▓▓████████████████████████▓▓▓▓
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓████▓▓▓▓████████████████████████████▓▓██░░▒▒▓▓▓▓▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▓▓▓▓▒▒▒▒▓▓▓▓▒▒▒▒▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓██████████████████▓▓██████████▓▓▓▓▓▓████████████▓▓██▓▓████████▓▓
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓████████████▓▓▓▓████████████████████████░░▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▓▓▓▓▒▒▓▓▓▓▓▓▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓████████████████████████▓▓▒▒████▓▓██████████████▓▓▓▓▓▓▓▓██████
// ▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓████████████▓▓▓▓▓▓████████████████████████▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓████████████████████████████▓▓░░░░░░░░▒▒▓▓██████████████▓▓▓▓▓▓▓▓▓▓████
// ▓▓▓▓▓▓▓▓▓▓████████████████▓▓▓▓▓▓████████████████████████████████▓▓▒▒▓▓▓▓▒▒▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓██████████████████████████░░░░░░░░▒▒▒▒██████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓██
// ▓▓▓▓████████▓▓▓▓██████████▓▓▓▓▓▓██████████████████████████████████▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████████████████████████▒▒░░░░░░▒▒▒▒▒▒▓▓████████████████▓▓▓▓▓▓▓▓▓▓██
// ████████▓▓▓▓▓▓████████████▓▓██▓▓▓▓▓▓▓▓██████████████████████████████▒▒▓▓▓▓▒▒▓▓░░▒▒▓▓████▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒██▓▓  ▓▓▓▓▓▓▓▓▓▓▓▓██▓▓██████████████████████▓▓░░░░░░░░░░▒▒▒▒▒▒████████████████████▓▓▓▓▓▓▓▓
// ████▓▓▓▓▓▓▓▓▓▓████████▓▓▓▓▓▓██▓▓▓▓▓▓████████████████████████████████▒▒▓▓▓▓▓▓▓▓▒▒░░░░░░░░▒▒░░▒▒▓▓▓▓▒▒▒▒░░░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓██▓▓▓▓██████▒▒▒▒▒▒██▓▓▓▓▓▓▒▒░░▒▒▒▒░░░░▒▒▒▒▒▒▓▓████▓▓██▓▓▓▓██████████▓▓▓▓
// ▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓██▓▓██▓▓▓▓▓▓██████▓▓██████████████████████████████▒▒▒▒▓▓██▓▓▒▒░░░░░░      ░░    ▒▒░░  ░░░░░░  ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓██▓▓▒▒▓▓▓▓██░░░░░░▒▒░░░░▓▓░░░░▒▒▒▒▒▒▒▒████▓▓██▓▓▓▓▓▓▓▓████████▓▓
// ▓▓████████████▓▓▓▓▓▓▓▓████████▓▓████████████████████████████████████▓▓▓▓▓▓▓▓▒▒▒▒░░░░░░░░░░░░░░░░  ░░░░░░░░░░░░░░▒▒██▒▒▓▓██░░░░░░░░▒▒██▒▒▒▒▓▓██░░░░░░░░░░▒▒▓▓░░░░▒▒▒▒▓▓▒▒▓▓▓▓▓▓██▓▓████▓▓▓▓████████
// ██▓▓▓▓████████▓▓██▓▓████████████████████████████████████████████████▓▓▓▓▒▒▓▓░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░  ▒▒▒▒▒▒▒▒████░░░░░░░░░░▒▒▒▒▓▓▓▓▓▓░░▒▒▒▒░░░░▒▒▓▓▒▒░░░░▒▒▒▒▒▒▓▓▓▓▓▓████▓▓▓▓████▓▓██████
// ▓▓▓▓████████▓▓████████████████████████████████████████████████████▓▓██▓▓▓▓▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░  ░░░░░░░░░░▓▓▒▒▓▓▓▓▓▓░░░░░░░░░░▒▒▓▓▓▓▒▒▒▒░░▒▒░░░░░░▒▒▒▒██▒▒▒▒░░▒▒▓▓▓▓▒▒▒▒██████▓▓▓▓▓▓██▓▓████
// ▓▓██████████████████████████████████████████████████████████████████▓▓████▓▓░░░░  ░░░░░░    ░░  ░░  ░░░░░░░░░░░░▒▒▓▓▓▓▓▓▓▓░░░░░░░░░░▒▒▒▒▓▓▓▓▒▒░░▒▒░░░░░░▒▒▓▓████▓▓▒▒░░▓▓▓▓▓▓▓▓████████▓▓▓▓████▓▓██
// ████████████████████████████████████████████████████████████████████████████▓▓  ░░░░░░░░    ░░░░  ░░░░░░░░░░  ░░▓▓▓▓██▒▒▒▒░░░░░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓░░░░░░▓▓██▒▒▓▓██▒▒▓▓▓▓▓▓██████████▓▓▓▓▓▓▓▓████
// ██████████▓▓████████████▓▓██████████████████████████████████████▓▓▓▓████▓▓██▓▓░░░░  ░░░░  ░░░░░░▒▒░░░░░░  ░░░░▒▒▓▓▓▓██▒▒░░▒▒░░▒▒▒▒░░▒▒▓▓▓▓▒▒▓▓░░░░▓▓▓▓░░▒▒▓▓██▓▓▓▓██▓▓▒▒▓▓████████████████▓▓▓▓▓▓██
// ████████▓▓████████████▒▒██▒▒▓▓██▓▓████████████████████████████████▓▓░░▓▓██████▓▓    ░░░░░░░░░░    ░░  ░░░░  ▒▒▓▓████▓▓▒▒░░▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒░░░░▒▒▒▒▒▒██░░▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓██████████▓▓▓▓██
// ██████▓▓██████▓▓▓▓▓▓▓▓▒▒▓▓▒▒▓▓▓▓▓▓▓▓██████▓▓██████▓▓████▓▓▓▓▓▓▒▒▒▒▒▒▓▓░░▒▒▓▓██▓▓▓▓  ░░░░    ░░░░░░  ░░░░░░░░▓▓▓▓▓▓██▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒▒▒▓▓██▒▒▓▓▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓████▓▓████████████▓▓▓▓▓▓
// ████▓▓▓▓██████▓▓████░░▒▒▒▒▓▓▒▒▓▓██▒▒▓▓██▓▓▓▓▓▓████▓▓▒▒████▓▓▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒▓▓▓▓▒▒  ░░  ░░▒▒░░░░░░░░░░░░▓▓▒▒▓▓██▒▒▒▒▒▒▒▒▓▓▒▒▒▒░░▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓██▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▒▒▓▓████████▓▓██████████▓▓▓▓
// ████▓▓██████▓▓▓▓██▓▓▓▓▓▓▒▒▒▒▒▒▓▓▓▓▒▒▓▓██▓▓▓▓▒▒▓▓▓▓▓▓▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓░░▒▒░░░░░░░░░░  ░░░░░░▓▓▒▒▓▓▓▓██▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▓▓▒▒▓▓▒▒▒▒▒▒▒▒▒▒▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓██████▓▓████████████▓▓
// ██▓▓██████▓▓▓▓▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒██▓▓▓▓▒▒▒▒██▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██  ▒▒▒▒  ░░  ░░░░  ░░▓▓▓▓▒▒▒▒▓▓██▒▒▒▒▓▓▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▓▓████▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓████████▓▓██████████▓▓
// ██▓▓██████▓▓▓▓▓▓████▓▓▓▓▓▓██▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒▒▒▓▓▒▒▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓░░░░▒▒▓▓  ░░░░  ░░▓▓▓▓▒▒▒▒▒▒▓▓▓▓▒▒▒▒▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▓▓██████▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓████████████████████
// ██████████▓▓▓▓████▓▓██▓▓▓▓████▒▒▒▒▒▒▓▓▓▓██▓▓▒▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░▒▒░░░░░░▒▒▒▒░░░░░░▓▓▓▓▒▒▒▒▒▒▒▒▒▒▓▓▒▒░░▒▒▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓▓▓████▓▓████████████████▓▓██████▓▓████████████
// ██████████▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▓▓▓▓▒▒▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒  ▒▒░░░░░░  ░░▒▒▒▒▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓▓▓████▓▓██████▓▓▓▓████▓▓▓▓██████▓▓████████████
// ██████████▓▓██████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓██▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒      ░░▒▒  ░░░░░░▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▓▓▒▒▓▓████████████▓▓▓▓████▓▓▓▓██████████▒▒▒▒▒▒▓▓██
// ▓▓████████████████▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒      ░░░░    ░░  ░░▒▒▒▒▒▒██████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▓▓▓▓▓▓██████▓▓▓▓████▓▓▓▓████████▓▓▒▒▒▒▒▒▒▒██
// ▒▒▒▒██████▓▓██████████████████▓▓██▓▓▓▓██▓▓██▓▓██▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░      ░░░░  ░░░░░░▒▒████████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓████████▓▓▓▓▓▓▓▓▓▓▓▓██████████████▓▓▓▓██████▓▓▒▒▒▒▒▒▒▒▓▓██
// ▒▒▒▒████████████████▓▓▒▒▓▓▒▒▓▓████▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓          ░░░░▒▒██████████████████▓▓▒▒▓▓░░░░░░▒▒▒▒▒▒░░  ░░▓▓▓▓██████████▓▓▓▓▓▓▓▓▓▓▓▓████▒▒▓▓████████████████▒▒▓▓██▒▒▒▒▒▒██
// ██████████████████▓▓▒▒▓▓▒▒▓▓▓▓▒▒▓▓▓▓▒▒▓▓▒▒▓▓▒▒▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░      ░░▒▒▓▓████████████████████████▒▒░░░░░░░░░░░░░░░░      ▓▓██████████▓▓▓▓▓▓▓▓▓▓▓▓████▒▒▓▓▓▓████████████████████████████
// ████████▓▓▓▓▓▓████▓▓▓▓▓▓▓▓▒▒██████▓▓▓▓▒▒▓▓▓▓▓▓████▒▒▒▒▒▒▒▒▒▒▒▒▒▒    ░░░░░░▒▒▓▓▓▓▓▓██████████████▓▓▓▓▓▓██▓▓▓▓▒▒░░░░░░░░░░░░░░▒▒░░      ▓▓▓▓████████▓▓▓▓▓▓▓▓▓▓██▓▓██▓▓▒▒██▓▓▓▓▓▓▓▓██████████▓▓██████
// ████████▓▓▓▓▓▓▒▒████████▓▓████▓▓██▓▓▓▓▓▓▓▓▓▓▓▓▓▓██▒▒▒▒▒▒▒▒▒▒  ░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓██████████▓▓▓▓██▓▓██▓▓██▓▓▓▓▒▒      ░░░░░░░░░░░░░░      ▒▒    ▒▒██████████████▓▓████▓▓██▓▓▓▓▓▓▓▓████████▓▓▓▓████▓▓
// ▓▓████████▓▓▓▓▓▓████▓▓████████▓▓████▓▓▓▓████▓▓████▒▒▒▒▒▒░░░░░░▒▒▓▓▓▓▓▓▓▓▓▓██▓▓██████▓▓██▒▒▓▓▓▓▓▓▓▓██▒▒▓▓▓▓▒▒▒▒          ░░░░░░░░░░        ░░        ░░▒▒██████████▓▓████▓▓▓▓▓▓████████▓▓████████▓▓
// ▓▓██████▓▓▓▓▓▓▓▓▓▓██▓▓▓▓▓▓▓▓██▓▓▓▓▓▓████████████▓▓▒▒  ░░▓▓▓▓▓▓▓▓▓▓████████████▓▓▓▓▓▓▓▓██▓▓██▓▓▓▓████████▓▓▓▓▒▒            ░░░░▒▒░░                            ░░▒▒▓▓██▓▓▓▓▓▓▓▓▓▓██████▓▓██████████
// ▓▓▓▓██████████████▓▓▓▓▓▓▓▓▓▓██▓▓████████████░░        ▓▓▓▓▓▓██████▓▓▓▓████▓▓▒▒██▓▓▓▓▓▓██████████████████▓▓▓▓▓▓▒▒░░░░░░░░    ░░░░░░░░                                ▓▓▓▓████████████▓▓▓▓▓▓▓▓██████
// ██████████▓▓████████▓▓▓▓██████████▓▓████░░            ▓▓▓▓▓▓██████▓▓██████▓▓▓▓▓▓██████████████████████████▒▒            ░░      ░░░░                                ░░██████▓▓████████▓▓██████████
// ██▓▓▓▓██████▓▓██████████▓▓████▓▓████▓▓                ▒▒▓▓▓▓████████▓▓██▓▓▓▓▓▓██████████████████████████▒▒  ░░  ░░░░░░    ░░    ░░                                    ▓▓██▓▓██████▓▓▓▓████████████
// ██▓▓▓▓██████▓▓████▓▓▓▓████████▓▓▓▓▓▓░░                ░░▓▓▓▓████████▓▓██▓▓████████████████████████████░░░░░░▒▒▒▒▒▒▒▒░░▒▒░░  ░░                                          ██▓▓▓▓████▓▓▓▓██████████▓▓
// ▓▓██▓▓██████▓▓██████████▓▓████████▓▓                    ▓▓▓▓▓▓████████▓▓████████████████████████████  ░░▒▒▒▒██▓▓          ░░░░░░  ░░                                      ▓▓██████▓▓██▓▓▓▓████████
// ██▓▓▓▓▓▓████▓▓▓▓██████████████▓▓██▒▒                    ▒▒▓▓▓▓██████████████████████████████████████▓▓▒▒████░░░░░░  ░░░░░░      ░░                                        ▓▓████▓▓▓▓▓▓████████████
// ████████████▓▓████████████████████                      ░░▓▓▓▓██████████████████████████████████████████▓▓    ░░░░▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░                                        ██████████████████████
// ▓▓██████████████████████████▓▓████                        ▓▓▓▓▓▓████████████████████████████████████████░░░░▒▒▒▒▓▓░░  ░░░░    ░░  ░░                                     



#include<bits/stdc++.h>
#include <iostream>
#include <string>
using namespace std;
#pragma GCC optimize ("O3")
#pragma GCC target ("sse4")

#pragma GCC optimize("Ofast")
static auto _ = [] () {ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);return 0;}();

#define int long long int

// 1d vectors
typedef std::vector<int> vi;
typedef std::vector<pair<int,int>> vii;
typedef std::vector<char> vc;
typedef std::vector<string> vs;

// 2d vector
typedef std::vector<vector<int>> vvi;
typedef std::vector<vector<char>> vvc;
typedef std::vector<vector<string>> vvs;

// 1d set
typedef std::set<int> si;
typedef std::set<char> sc;
typedef std::set<string> ss;

// map
typedef std::map<int,int> mii;
typedef std::map<char,int> mci;
typedef std::map<string,int> msi;
typedef std::map<pair<int,int>,int> miii;


// Pre Built Functions

//  1) Prime Sieve
bool prime_seive[1000010];
void prime_seive_func()
{
	bool flag;

	for(int i=0;i<=1000002;i++)
		prime_seive[i] = true;
	
	
	for(int i=2;i<=1000002;i++)
	{
		for(int j=i*i;j<=1000002;j+=i)
		{
			prime_seive[j-1] = false;
		}
	}

	prime_seive[0]=0;

/* How to use this sieve function
	First call prime_seive_func();
	Then next call cout<<prime_seive[n-1];
	=>This is for checking prime property of n.
	eg.For checking prime
	Property Of 29 do cout<<prime_seive[28];
*/

}

//  2) modular-exponentiation-power-in-modular-arithmetic
int mod_power(int x,  int y, int p)
{
    int res = 1;     // Initialize result

    x = x % p; // Update x if it is more than or
                // equal to p

    if (x == 0) return 0; // In case x is divisible by p;

    while (y > 0)
    {
        // If y is odd, multiply x with result
    	if (y & 1)
    		res = (res*x) % p;

        // y must be even now
        y = y>>1; // y = y/2
        x = (x*x) % p;
    }
    return res;
}


// #define
#define sync ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#define each(i, a) for (auto i: a)
#define fdv(x) for(auto i : x)cout<<i<<" ";
#define fdm(x) for(auto i : x)cout<<i.first<<" "<<i.second<<endl;
#define fr(i,x) for(int i=0;i<x;i++)
#define pb(v,x) v.push_back(x)
#define len(s) s.size()
#define sort(v) sort(v.begin(),v.end())
#define reverse(v) reverse(v.begin(),v.end())
// #define find(v,x)  find(v.begin(),v.end(),x)
#define l_b(v,x) lower_bound(v.begin(),v.end(),x)
#define u_b(v,x) upper_bound(v.begin(),v.end(),x)
#define b_s(v,x) binary_search(v.begin(),v.end(),x)


// To perform read operation
template<class T> void read(T &x) { cin >> x; }
void read(float &d) { string t; read(t); d = stof(t); }
void read(double &d) { string t; read(t); d = stod(t); }
void read(long double &d) { string t; read(t); d = stold(t); }
template<class A, class B> void read(pair<A, B> &a) {
read(a.fr); read(a.sc);
}
template<class A> void read(vector<A> &a) { each(i, a) read(i); }
template<class H, class... T> void read(H &h, T&... t) {
read(h); read(t...);
}


// To perform write operation
string to_string(char c) { return string(1, c); }
string to_string(bool b) { return b ? "true" : "false"; }
string to_string(const char * s) { return string(s); }
string to_string(string s) { return s; }
template<class A, class B>
string to_string(pair<A, B> &a) { 
	return to_string(a.fr) + " " + to_string(a.sc); 
}
template<class T> void write(T x) { cout << to_string(x); }
template<class H, class... T> void write(const H &h, const T&... t) {
write(h); write(t...); 
}

void writeln() { write("\n"); }
template<class T> void writeln(vector<T> x) { 
each(i, x) { write(i); write(" "); }
writeln();
}
template<class H, class... T> void writeln(const H &h, const T&... t) {
write(h); if (sizeof...(t)) write(' '); writeln(t...);
}


#define vip(v,x) vi v;for(int i=0;i<x;i++){int a;cin>>a;v.push_back(a);}
#define pr(i) cout<<i
#define prr(i,j) cout<<i<<" "<<j
#define prrr(i,j,k) cout<<i<<" "<<j<<" "<<k
#define prrrr(i,j,k,l) cout<<i<<" "<<j<<" "<<k<<" "<<l
#define prn(i) cout<<i<<endl
#define prnn(i,j) cout<<i<<" "<<j<<endl
#define prnnn(i,j,k) cout<<i<<" "<<j<<" "<<k<<endl
#define prnnnn(i,j,k,l) cout<<i<<" "<<j<<" "<<k<<" "<<l<<endl
#define space cout<<" "
#define nl  cout<<endl
#define elif else if
#define meme(t) memset(t,-1,sizeof(t))
#define debug(x) cerr<<#x<<"	 "<<x<<endl;
// cout<<fixed<<setprecision(6);








int modBigNumber(char num, int m,int x,int prev_mod)
{
	int mod = prev_mod;

	int digit = num - '0';

	mod = mod * 10 + digit;

	mod = mod % m;       
	return mod;
}



int modBigNumber1(char num, int m,int x,int prev_mod)
{
	int mod = prev_mod;

	int digit = num - '0';

	mod = (digit * mod_power(10,x,m) + mod%m)%m;
	return mod;
}


unordered_map<int,int> m;

void solve()
{
	string n;
	read(n);
	int a,b;
	read(a,b);

	string temp1;


	int x=0,y=0,mod1=0,mod2=0;

	for(int i=0;i<len(n);i++)
	{
		mod1  = modBigNumber(n[i],a,x,mod1);
		if(mod1==0)
			m[i+1]++;
		x++;
	}

	// nl;
	string ans="NO";
	string aa=n;
	for(int i=len(n)-1;i>=0;i--)
	{
		aa.pop_back();

		mod2 = modBigNumber1(n[i],b,y,mod2);

		if(mod2==0)
			m[i]++;


		if(m[i]==2)
		{
			if(n[i]!='0')
			{
				ans="YES";
				prn(ans);
				prn(aa);
				string gp;
				for(int gg=i;gg<len(n);gg++)
					gp.push_back(n[gg]);
				prn(gp);
				break;
			}
		}

		y++;
	}
	
	if(ans=="NO")
		prn("NO");
}



main()
{
	sync

	#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	freopen("error.txt", "w", stderr);
    #endif


	// int test;read(test);
	// while(test--)
	solve();
	cerr << "Time : " << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << "ms\n";
}
